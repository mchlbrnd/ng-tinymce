!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/core/src/metadata/directives"),require("@angular/forms")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common","@angular/core/src/metadata/directives","@angular/forms"],t):t(e["ng-tinymce"]=e["ng-tinymce"]||{},e.ng.core,e.ng.core,e._angular_core_src_metadata_directives,e.ng.forms)}(this,function(e,t,n,i,r){"use strict";var o=function(){function e(){this.skin_url="/assets/tinymce/skins/lightgray",this.toolbar="undo redo | styleselect | bold italic | link image",this.plugins="link paste",this.schema="html5"}return e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[]},e}(),c=function(){function e(e,n,i){var r=this;this._elementRef=e,this._changeDetectorRef=n,this._providedSettings=i,this._tinymceEditorSettings={},this._onInitialized=new t.EventEmitter,this._tinymceOnChange=function(){r._value=r._tinymceEditor.getContent(),r._onChange(r._value),r._changeDetectorRef.detectChanges()},this._tinymceInitInstanceCallback=function(e){r._tinymceEditor=e,r._tinymceEditor.on("KeyUp",r._tinymceOnChange),r._tinymceEditor.on("PastePostProcess",r._tinymceOnChange),r._tinymceEditor.on("Change",r._tinymceOnChange),r.writeValue(r._value),r._onInitialized.emit(r._tinymceEditor)}}return Object.defineProperty(e.prototype,"editor",{get:function(){return this._tinymceEditor},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e={init_instance_callback:this._tinymceInitInstanceCallback,target:this._elementRef.nativeElement};e=Object.assign({},this._providedSettings,this._tinymceEditorSettings,e),tinymce.init(e)},e.prototype.ngOnDestroy=function(){tinymce.remove(this._tinymceEditor)},e.prototype.writeValue=function(e){e&&(this._value=e,this._tinymceEditor&&this._tinymceEditor.setContent(this._value,{format:"raw"}))},e.prototype.registerOnChange=function(e){this._onChange=e},e.prototype.registerOnTouched=function(e){},e.decorators=[{type:t.Directive,args:[{selector:"p[tinymce], div[tinymce], textarea[tinymce]",exportAs:"tinymce",providers:[{provide:r.NG_VALUE_ACCESSOR,useExisting:t.forwardRef(function(){return e}),multi:!0}]}]}],e.ctorParameters=function(){return[{type:t.ElementRef},{type:t.ChangeDetectorRef},{type:o}]},e.propDecorators={_tinymceEditorId:[{type:i.Input,args:["tinymce"]}],_tinymceEditorSettings:[{type:i.Input,args:["settings"]}],_onInitialized:[{type:t.Output,args:["onInitialized"]}]},e}(),a=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule],declarations:[c],providers:[o],exports:[c]}]}],e.ctorParameters=function(){return[]},e}();e.NgTinymceModule=a,e.TinymceEditorSettingsService=o,e.TinymceEditorDirective=c,Object.defineProperty(e,"__esModule",{value:!0})});