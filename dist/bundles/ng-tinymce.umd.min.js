!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("tinymce/tinymce"),require("tinymce/themes/modern"),require("tinymce/themes/inlite"),require("@angular/core"),require("@angular/common"),require("@angular/core/src/metadata/directives"),require("@angular/forms")):"function"==typeof define&&define.amd?define(["exports","tinymce/tinymce","tinymce/themes/modern","tinymce/themes/inlite","@angular/core","@angular/common","@angular/core/src/metadata/directives","@angular/forms"],t):t(e["ng-tinymce"]=e["ng-tinymce"]||{},e.tinymce_tinymce,e.tinymce_themes_modern,e.tinymce_themes_inlite,e.ng.core,e.ng.common,e._angular_core_src_metadata_directives,e.ng.forms)}(this,function(e,t,n,i,r,o,c,a){"use strict";var s=function(){function e(){this.skin_url="/assets/tinymce/skins/lightgray",this.toolbar="undo redo | styleselect | bold italic | link image",this.schema="html5"}return e.decorators=[{type:r.Injectable}],e.ctorParameters=function(){return[]},e}(),m=function(){function e(e,t,n){var i=this;this._elementRef=e,this._changeDetectorRef=t,this._providedSettings=n,this._tinymceEditorSettings={},this._onInitialized=new r.EventEmitter,this._tinymceOnChange=function(){i._value=i._tinymceEditor.getContent(),i._onChange(i._value),i._changeDetectorRef.detectChanges()},this._tinymceInitInstanceCallback=function(e){i._tinymceEditor=e,i._tinymceEditor.on("KeyUp",i._tinymceOnChange),i._tinymceEditor.on("PastePostProcess",i._tinymceOnChange),i._tinymceEditor.on("Change",i._tinymceOnChange),i.writeValue(i._value),i._onInitialized.emit(i._tinymceEditor)}}return Object.defineProperty(e.prototype,"editor",{get:function(){return this._tinymceEditor},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e={init_instance_callback:this._tinymceInitInstanceCallback,target:this._elementRef.nativeElement};e=Object.assign({},this._providedSettings,this._tinymceEditorSettings,e),tinymce.init(e)},e.prototype.ngOnDestroy=function(){tinymce.remove(this._tinymceEditor)},e.prototype.writeValue=function(e){e&&(this._value=e,this._tinymceEditor&&this._tinymceEditor.setContent(this._value,{format:"raw"}))},e.prototype.registerOnChange=function(e){this._onChange=e},e.prototype.registerOnTouched=function(e){},e.decorators=[{type:r.Directive,args:[{selector:"p[tinymce], div[tinymce], textarea[tinymce]",exportAs:"tinymce",providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:r.forwardRef(function(){return e}),multi:!0}]}]}],e.ctorParameters=function(){return[{type:r.ElementRef},{type:r.ChangeDetectorRef},{type:s}]},e.propDecorators={_tinymceEditorId:[{type:c.Input,args:["tinymce"]}],_tinymceEditorSettings:[{type:c.Input,args:["settings"]}],_onInitialized:[{type:r.Output,args:["onInitialized"]}]},e}(),u=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{imports:[o.CommonModule],declarations:[m],providers:[s],exports:[m]}]}],e.ctorParameters=function(){return[]},e}();e.NgTinymceModule=u,e.TinymceEditorSettingsService=s,e.TinymceEditorDirective=m,Object.defineProperty(e,"__esModule",{value:!0})});